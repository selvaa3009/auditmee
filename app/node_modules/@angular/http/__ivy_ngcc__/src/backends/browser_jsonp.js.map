{"version":3,"file":"browser_jsonp.js","sources":["../../../../../modules/@angular/http/src/backends/browser_jsonp.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nlet /** @type {?} */ _nextRequestId = 0;\nexport const /** @type {?} */ JSONP_HOME = '__ng_jsonp__';\nlet /** @type {?} */ _jsonpConnections: {[key: string]: any} = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections(): {[key: string]: any} {\n  const /** @type {?} */ w: {[key: string]: any} = typeof window == 'object' ? window : {};\n  if (_jsonpConnections === null) {\n    _jsonpConnections = w[JSONP_HOME] = {};\n  }\n  return _jsonpConnections;\n}\nexport class BrowserJsonp {\n/**\n * @param {?} url\n * @return {?}\n */\nbuild(url: string): any {\n    const /** @type {?} */ node = document.createElement('script');\n    node.src = url;\n    return node;\n  }\n/**\n * @return {?}\n */\nnextRequestID(): string { return `__req${_nextRequestId++}`; }\n/**\n * @param {?} id\n * @return {?}\n */\nrequestCallback(id: string): string { return `${JSONP_HOME}.${id}.finished`; }\n/**\n * @param {?} id\n * @param {?} connection\n * @return {?}\n */\nexposeConnection(id: string, connection: any) {\n    const /** @type {?} */ connections = _getJsonpConnections();\n    connections[id] = connection;\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nremoveConnection(id: string) {\n    const /** @type {?} */ connections = _getJsonpConnections();\n    connections[id] = null;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nsend(node: any) { document.body.appendChild( /** @type {?} */((<Node>(node)))); }\n/**\n * @param {?} node\n * @return {?}\n */\ncleanup(node: any) {\n    if (node.parentNode) {\n      node.parentNode.removeChild( /** @type {?} */((<Node>(node))));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BrowserJsonp_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserJsonp.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserJsonp.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}