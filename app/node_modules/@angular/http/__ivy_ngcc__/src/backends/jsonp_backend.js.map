{"version":3,"file":"jsonp_backend.js","sources":["../../../../../modules/@angular/http/src/backends/jsonp_backend.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\n\nimport {ResponseOptions} from '../base_response_options';\nimport {ReadyState, RequestMethod, ResponseType} from '../enums';\nimport {Connection, ConnectionBackend} from '../interfaces';\nimport {Request} from '../static_request';\nimport {Response} from '../static_response';\n\nimport {BrowserJsonp} from './browser_jsonp';\n\nconst /** @type {?} */ JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nconst /** @type {?} */ JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class JSONPConnection implements Connection {\n  /**\n   * The {@link ReadyState} of this request.\n   */\n  readyState: ReadyState;\n\n  /**\n   * The outgoing HTTP request.\n   */\n  request: Request;\n\n  /**\n   * An observable that completes with the response, when the request is finished.\n   */\n  response: Observable<Response>;\n/**\n * Callback called when the JSONP request completes, to notify the application\n * of the new data.\n * @abstract\n * @param {?=} data\n * @return {?}\n */\nfinished(data?: any) {}\n}\n\nfunction JSONPConnection_tsickle_Closure_declarations() {\n/**\n * The {\\@link ReadyState} of this request.\n * @type {?}\n */\nJSONPConnection.prototype.readyState;\n/**\n * The outgoing HTTP request.\n * @type {?}\n */\nJSONPConnection.prototype.request;\n/**\n * An observable that completes with the response, when the request is finished.\n * @type {?}\n */\nJSONPConnection.prototype.response;\n}\n\nexport class JSONPConnection_ extends JSONPConnection {\nprivate _id: string;\nprivate _script: Element;\nprivate _responseData: any;\nprivate _finished: boolean = false;\n/**\n * @param {?} req\n * @param {?} _dom\n * @param {?=} baseResponseOptions\n */\nconstructor(\n      req: Request,\nprivate _dom: BrowserJsonp,\nprivate baseResponseOptions?: ResponseOptions) {\n    super();\n    if (req.method !== RequestMethod.Get) {\n      throw new TypeError(JSONP_ERR_WRONG_METHOD);\n    }\n    this.request = req;\n    this.response = new Observable<Response>((responseObserver: Observer<Response>) => {\n\n      this.readyState = ReadyState.Loading;\n      const id = this._id = _dom.nextRequestID();\n\n      _dom.exposeConnection(id, this);\n\n      // Workaround Dart\n      // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n      const callback = _dom.requestCallback(this._id);\n      let url: string = req.url;\n      if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n        url = url.replace('=JSONP_CALLBACK&', `=${callback}&`);\n      } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n        url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + `=${callback}`;\n      }\n\n      const script = this._script = _dom.build(url);\n\n      const onLoad = (event: Event) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        if (!this._finished) {\n          let responseOptions =\n              new ResponseOptions({body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url});\n          if (baseResponseOptions) {\n            responseOptions = baseResponseOptions.merge(responseOptions);\n          }\n          responseObserver.error(new Response(responseOptions));\n          return;\n        }\n\n        let responseOptions = new ResponseOptions({body: this._responseData, url});\n        if (this.baseResponseOptions) {\n          responseOptions = this.baseResponseOptions.merge(responseOptions);\n        }\n\n        responseObserver.next(new Response(responseOptions));\n        responseObserver.complete();\n      };\n\n      const onError = (error: Error) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        let responseOptions = new ResponseOptions({body: error.message, type: ResponseType.Error});\n        if (baseResponseOptions) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        responseObserver.error(new Response(responseOptions));\n      };\n\n      script.addEventListener('load', onLoad);\n      script.addEventListener('error', onError);\n\n      _dom.send(script);\n\n      return () => {\n        this.readyState = ReadyState.Cancelled;\n        script.removeEventListener('load', onLoad);\n        script.removeEventListener('error', onError);\n        this._dom.cleanup(script);\n      };\n    });\n  }\n/**\n * @param {?=} data\n * @return {?}\n */\nfinished(data?: any) {\n    // Don't leak connections\n    this._finished = true;\n    this._dom.removeConnection(this._id);\n    if (this.readyState === ReadyState.Cancelled) return;\n    this._responseData = data;\n  }\n}\n\nfunction JSONPConnection__tsickle_Closure_declarations() {\n/** @type {?} */\nJSONPConnection_.prototype._id;\n/** @type {?} */\nJSONPConnection_.prototype._script;\n/** @type {?} */\nJSONPConnection_.prototype._responseData;\n/** @type {?} */\nJSONPConnection_.prototype._finished;\n/** @type {?} */\nJSONPConnection_.prototype._dom;\n/** @type {?} */\nJSONPConnection_.prototype.baseResponseOptions;\n}\n\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class JSONPBackend extends ConnectionBackend {}\nexport class JSONPBackend_ extends JSONPBackend {\n/**\n * @param {?} _browserJSONP\n * @param {?} _baseResponseOptions\n */\nconstructor(private _browserJSONP: BrowserJsonp,\nprivate _baseResponseOptions: ResponseOptions) {\n    super();\n  }\n/**\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: Request): JSONPConnection {\n    return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BrowserJsonp, },\n{type: ResponseOptions, },\n];\n}\n\nfunction JSONPBackend__tsickle_Closure_declarations() {\n/** @type {?} */\nJSONPBackend_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJSONPBackend_.ctorParameters;\n/** @type {?} */\nJSONPBackend_.prototype._browserJSONP;\n/** @type {?} */\nJSONPBackend_.prototype._baseResponseOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}