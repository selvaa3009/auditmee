{"version":3,"file":"pdfmake.service.js","sourceRoot":"","sources":["../../src/app/pdfmake/pdfmake.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Table } from '../objects/table';\nimport { PdfDefinition } from '../objects/pdf';\nimport * as pdfMakeCore from 'pdfmake/build/pdfmake';\nimport * as pdfMakeFonts from 'pdfmake/build/vfs_fonts';\n\n\nexport class PdfmakeService {\n\n  pageSize: pdfMakeCore.pageSizeType = 'LETTER';\n  pageOrientation: pdfMakeCore.pageOrientationType = 'portrait';\n  documentDefinition: PdfDefinition;\n\n  private pdfMake: any;\n\n  private base64;\n\n  constructor() {\n    this.pdfMake = pdfMakeCore;\n    this.pdfMake.vfs = pdfMakeFonts.pdfMake.vfs;\n  }\n\n  create() {\n    if (this.documentDefinition) {\n      this.destroy();\n    }\n    this.documentDefinition = new PdfDefinition();\n  }\n\n  destroy() {\n    this.documentDefinition = null;\n  }\n\n  open() {\n    this.pdfMake.createPdf(this.getPdfDefinition()).open();\n  }\n\n  print() {\n    this.pdfMake.createPdf(this.getPdfDefinition()).print();\n  }\n\n  download(name?: string) {\n    this.pdfMake.createPdf(this.getPdfDefinition()).download(name);\n  }\n\n  configureStyles(styles: any) {\n    this.getPdfDefinition().styles = styles;\n  }\n\n  addText(text: string, style?: any | string, pageBreak?: string) {\n    this.getPdfDefinition().content.push({ text: text, style: style, pageBreak: pageBreak });\n  }\n\n  addColumns(columnsText: string[]) {\n    const columns = [];\n    for (const column of columnsText) {\n      columns.push({ text: column });\n    }\n\n    this.getPdfDefinition().content.push({ columns: columns });\n  }\n\n  addTable(table: Table) {\n    const body = [];\n\n    if (table) {\n      if (table.headers) {\n        body.push(table.headers.get());\n      }\n\n      if (table.rows) {\n        for (const row of table.rows) {\n          body.push(row.get());\n        }\n      }\n\n      this.getPdfDefinition().content.push({ table: { widths: table.widths, body: body } });\n    }\n  }\n\n  addImage(url: string, width?: number, height?: number) {\n    const image = new Image();\n\n    image.setAttribute('crossOrigin', 'anonymous');\n    image.src = url;\n\n    image.onload = () => {\n      let canvas = document.createElement('canvas');\n      canvas.width = image.naturalWidth;\n      canvas.height = image.naturalHeight;\n\n      canvas.getContext('2d').drawImage(image, 0, 0);\n\n      if (width && !height) {\n        height = width;\n      }\n\n      const finalImage = {\n        image: canvas.toDataURL('image/png'),\n        width: width ? width : image.naturalWidth,\n        height: height ? height : image.naturalHeight\n      };\n\n      this.getPdfDefinition().content.push(finalImage);\n\n      canvas = null;\n    };\n  }\n\n  addUnorderedlist(items: any[]) {\n    this.documentDefinition.content.push({ ul: items });\n  }\n\n  addOrderedList(items: any[], reversed = false, start?: number) {\n    this.getPdfDefinition().content.push({ reversed: reversed, start: start, ol: items });\n  }\n\n  private getPdfDefinition() {\n    if (this.documentDefinition) {\n      return this.documentDefinition;\n    } else {\n      throw new Error('The document isn\\'t created! Please use the create()\" method to create it before use it.');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}